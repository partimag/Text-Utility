{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mukul\\\\OneDrive\\\\Desktop\\\\my app\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport QRCode from \"react-qr-code\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [value, setValue] = useState();\n  const [Bgcolor, setBgColor] = useState(\"#FFFF\");\n  const [fore, setFore] = useState(\"#000000\");\n  const [size, setSize] = useState(200);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contanier\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"value of QR code\",\n        onChange: e => setValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"background color\",\n        onChange: e => setBgColor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"color\",\n        onChange: e => setColor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"size of number\",\n        onChange: e => setSize(parseInt(e.target.value === \"\" ? 0 : e.target.value, 10))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), value && /*#__PURE__*/_jsxDEV(QRCode, {\n        title: \"QR code\",\n        value: value,\n        bgColor: Bgcolor,\n        fgColor: fore,\n        size: size === \"\" ? 0 : size\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"/KWuHUaT8e9WxYWg1J0IfFQVxT0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["QRCode","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","value","setValue","Bgcolor","setBgColor","fore","setFore","size","setSize","children","className","type","placeholder","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","setColor","parseInt","title","bgColor","fgColor","_c","$RefreshReg$"],"sources":["C:/Users/mukul/OneDrive/Desktop/my app/my-app/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport QRCode from \"react-qr-code\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [value, setValue] = useState();\n  const [Bgcolor, setBgColor] = useState(\"#FFFF\");\n  const [fore, setFore] = useState(\"#000000\");\n\n  const [size, setSize] = useState(200);\n\n  return (\n    <>\n      <div className=\"contanier\">\n        <input\n          type=\"text\"\n          placeholder=\"value of QR code\"\n          onChange={(e) => setValue(e.target.value)}\n        ></input>\n        <br />\n        <br />\n        <input\n          type=\"text\"\n          placeholder=\"background color\"\n          onChange={(e) => setBgColor(e.target.value)}\n        ></input>\n        <br />\n        <br />\n        <input\n          type=\"text\"\n          placeholder=\"color\"\n          onChange={(e) => setColor(e.target.value)}\n        ></input>\n\n        <br />\n        <br />\n        <input\n          type=\"number\"\n          placeholder=\"size of number\"\n          onChange={(e) =>\n            setSize(parseInt(e.target.value === \"\" ? 0 : e.target.value, 10))\n          }\n        ></input>\n        <br />\n        <br />\n        {value && (\n          <QRCode\n            title=\"QR code\"\n            value={value}\n            bgColor={Bgcolor}\n            fgColor={fore}\n            size={size === \"\" ? 0 : size}\n          />\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}