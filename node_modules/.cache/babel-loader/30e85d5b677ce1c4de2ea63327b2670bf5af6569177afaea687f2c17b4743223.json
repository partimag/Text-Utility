{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mukul\\\\OneDrive\\\\Desktop\\\\my app\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport QRCode from \"react-qr-code\";\nimport Navbar from \"./compoenet/Navbar\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [value, setValue] = useState();\n  const [color, setColor] = useState(\"#FFFF\");\n  const [force, setForce] = useState(\"#00000\");\n  const [size, setSize] = useState(200);\n  const [mode, setMode] = useState(\"light\");\n  const toglerMode = () => {\n    if (mode == light) {\n      setMode(dark);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      toglerMode: toglerMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contanier\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"value of QR code\",\n        onChange: e => setValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"background color\",\n        onChange: e => setColor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"fore color\",\n        onChange: e => setForce(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"value of QR code\",\n        onChange: e => setValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"size of number\",\n        onChange: e => setSize(parseInt(e.target.value === \"\" ? 0 : e.target.value, 10))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), value && /*#__PURE__*/_jsxDEV(QRCode, {\n        title: \"QR code\",\n        value: value,\n        bgColor: color,\n        fgColor: force,\n        size: size === \"\" ? 0 : size\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"RRkpcYKk0tZ7Q5cBEklXrQgrp4g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["QRCode","Navbar","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","value","setValue","color","setColor","force","setForce","size","setSize","mode","setMode","toglerMode","light","dark","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","onChange","e","target","parseInt","title","bgColor","fgColor","_c","$RefreshReg$"],"sources":["C:/Users/mukul/OneDrive/Desktop/my app/my-app/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport QRCode from \"react-qr-code\";\n\nimport Navbar from \"./compoenet/Navbar\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [value, setValue] = useState();\n  const [color, setColor] = useState(\"#FFFF\");\n  const [force, setForce] = useState(\"#00000\");\n  const [size, setSize] = useState(200);\n  const [mode, setMode] = useState(\"light\");\n  const toglerMode = () => {\n    if (mode == light) {\n      setMode(dark);\n    }\n  };\n  return (\n    <>\n      <Navbar toglerMode={toglerMode} />\n\n      <div className=\"contanier\">\n        <input\n          type=\"text\"\n          placeholder=\"value of QR code\"\n          onChange={(e) => setValue(e.target.value)}\n        ></input>\n        <br />\n        <br />\n        <input\n          type=\"text\"\n          placeholder=\"background color\"\n          onChange={(e) => setColor(e.target.value)}\n        ></input>\n        <br />\n        <br />\n        <input\n          type=\"text\"\n          placeholder=\"fore color\"\n          onChange={(e) => setForce(e.target.value)}\n        ></input>\n        <br />\n        <br />\n        <input\n          type=\"text\"\n          placeholder=\"value of QR code\"\n          onChange={(e) => setValue(e.target.value)}\n        ></input>\n        <br />\n        <br />\n        <input\n          type=\"number\"\n          placeholder=\"size of number\"\n          onChange={(e) =>\n            setSize(parseInt(e.target.value === \"\" ? 0 : e.target.value, 10))\n          }\n        ></input>\n        <br />\n        <br />\n        {value && (\n          <QRCode\n            title=\"QR code\"\n            value={value}\n            bgColor={color}\n            fgColor={force}\n            size={size === \"\" ? 0 : size}\n          />\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}