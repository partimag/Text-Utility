{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mukul\\\\OneDrive\\\\Desktop\\\\my app\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport QRCode from \"react-qr-code\";\nimport Navbar from \"./compoenet/Navbar\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [value, setValue] = useState();\n  const [Bgcolor, setBgColor] = useState(\"#FFFF\");\n  const [color, setColor] = useState(\"#0000\");\n  const [size, setSize] = useState(200);\n  const [mode, setMode] = useState(\"light\");\n  const toglerMode = () => {\n    if (mode == \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"green\";\n    } else {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"red\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      toglerMode: toglerMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contanier\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"value of QR code\",\n        onChange: e => setValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"background color\",\n        onChange: e => setBgColor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"color\",\n        onChange: e => setColor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"size of number\",\n        onChange: e => setSize(parseInt(e.target.value === \"\" ? 0 : e.target.value, 10))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), value && /*#__PURE__*/_jsxDEV(QRCode, {\n        title: \"QR code\",\n        value: value,\n        bgColor: Bgcolor,\n        color: Color,\n        size: size === \"\" ? 0 : size\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"Lk1OedCPAM2SiSh02+vzCRZQMDQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["QRCode","Navbar","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","value","setValue","Bgcolor","setBgColor","color","setColor","size","setSize","mode","setMode","toglerMode","document","body","style","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","onChange","e","target","parseInt","title","bgColor","Color","_c","$RefreshReg$"],"sources":["C:/Users/mukul/OneDrive/Desktop/my app/my-app/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport QRCode from \"react-qr-code\";\n\nimport Navbar from \"./compoenet/Navbar\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [value, setValue] = useState();\n  const [Bgcolor, setBgColor] = useState(\"#FFFF\");\n  const [color, setColor] = useState(\"#0000\");\n  const [size, setSize] = useState(200);\n  const [mode, setMode] = useState(\"light\");\n  const toglerMode = () => {\n    if (mode == \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"green\";\n    } else {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"red\";\n    }\n  };\n  return (\n    <>\n      <Navbar toglerMode={toglerMode} />\n\n      <div className=\"contanier\">\n        <input\n          type=\"text\"\n          placeholder=\"value of QR code\"\n          onChange={(e) => setValue(e.target.value)}\n        ></input>\n        <br />\n        <br />\n        <input\n          type=\"text\"\n          placeholder=\"background color\"\n          onChange={(e) => setBgColor(e.target.value)}\n        ></input>\n        <br />\n        <br />\n        <input\n          type=\"text\"\n          placeholder=\"color\"\n          onChange={(e) => setColor(e.target.value)}\n        ></input>\n\n        <br />\n        <br />\n        <input\n          type=\"number\"\n          placeholder=\"size of number\"\n          onChange={(e) =>\n            setSize(parseInt(e.target.value === \"\" ? 0 : e.target.value, 10))\n          }\n        ></input>\n        <br />\n        <br />\n        {value && (\n          <QRCode\n            title=\"QR code\"\n            value={value}\n            bgColor={Bgcolor}\n            color={Color}\n            size={size === \"\" ? 0 : size}\n          />\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}